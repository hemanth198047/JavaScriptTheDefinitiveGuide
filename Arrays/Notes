An Array is an ordered collection of values. each value is called an Element. Each element has a numeric position in the array and that numeric position is called index.

Javascript arrays are untyped. this means, we can put any type of value in an array. an array can contain a number, string, boolean, another Array and Objects. Allowing the elements
in this manner helps us to construct more complex arrays.

Arrays are zero-index based and starts from 0 and their indexes ranges to 2^32-1. Javascript arrays are dynamic in nature. This means, they grow or shrink as per the need and there is no
need to declare a fixed size array when you create it. Javascript arrays may be sparse which means elements in an array need not be in contiguous indexes and there may be gaps.

every array will have a length property where for non-sparse elements, this gives total elements in an array and for sparse arrays, this is greater than all the elements in an array.

Arrays are little bit more specialized forms of objects and indexes are really little bit more than property names that happens to be integers. arrays are normally optimized so that retrival
of elements using indexes is bit more performant than retrieving elements by their property names.

Arrays inherit their properties from Array.prototype which defines a rich set of array manipulation methods. Most of these methods are generic in nature which means they works not only for
pure arrays but also works for objects that are array like objects.

Creating Arrays
===============
The easiest way to create an array is to use Array Literal which is simply a comma separated list of elements enclosed in square brackets. 
example: var a = [1,2,3,4];

the elements of an array need not be always constants but they can be expressions as well. array literals can contain object literals or other array literals.
if you omit an element from an array, that element will be given a value of undefined.
array literal syntax allows an optional trailing comma. 

Another way to create an array is using an Array() Constructor. you can invoke this constructor in 3 distinct ways
1. call it with no arguments
   var a = new Array()
2. call it with a single numeric argument, which specifies its length
   var a = new Array(10)
3. explicitly specify two or more array elements or a single non-numeric element for the array
   var a = new Array(5,4,3,2,1, "testing", "testing");


